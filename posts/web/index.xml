<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>[Web] Web 相關 on YuCheng&#39;s Site</title>
    <link>https://tigernaxojr.github.io/blog/posts/web/</link>
    <description>Recent content in [Web] Web 相關 on YuCheng&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Jul 2022 11:35:00 +0800</lastBuildDate><atom:link href="https://tigernaxojr.github.io/blog/posts/web/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>[Web] API Design</title>
      <link>https://tigernaxojr.github.io/blog/posts/web/web-api-design/</link>
      <pubDate>Mon, 11 Jul 2022 11:35:00 +0800</pubDate>
      
      <guid>https://tigernaxojr.github.io/blog/posts/web/web-api-design/</guid>
      <description>Reference Best practices in cloud applications</description>
    </item>
    
    <item>
      <title>[Web] RESTful 敏感性 GET 參數</title>
      <link>https://tigernaxojr.github.io/blog/posts/web/security-get/</link>
      <pubDate>Mon, 11 Jul 2022 11:35:00 +0800</pubDate>
      
      <guid>https://tigernaxojr.github.io/blog/posts/web/security-get/</guid>
      <description>網址列參數洩漏風險 目前網頁後端資源存取大多以 RESTful Api 開發， REST 標準下 API 的設計需符合冪等性(idempotent)， SSL 連線連接 TCP 層與 HTTP 層，因此透過 HTTPS 傳輸的網頁，網址進入 TCP 層之後是被加密的， 即使封包被截取也只能看見要傳送的目標主機 那麼敏感性資料可以透過 GET 參數傳送嗎？
如果將機敏性資料夾帶於網址列當中會有洩漏的安全性風險，諸如：
 被 Shoulder surfers 竊取。(你的螢幕被偷看) 隨著頁面列印被印出。 使用者將連結加入書籤。 儲存在瀏覽器瀏覽歷史紀錄。 被記錄在 Web Server 的 Log，而 Log 本身可能不安全。  隱藏 RESTful GET 參數 因此避免這些資料外洩的可能，根本的做法就是讓機敏性資料從網址列消失，最好的做法是依據 OWASP 的建議把 參數夾帶在 Header 裡面，其他手段整理：
 將機敏性資料加密，但加密也會破壞 API RESTful 特性，在後端需要先解密無法直接對應回物件。 以 POST 的一部份傳輸(透過 HTTPS)，但會直接破壞 API 的 RESTful 特性。 根據 OWASP REST Security Cheat Sheet，應該把敏感性參數夾帶在 GET 請求的 HTTP Header 裡面透過 HTTPS 傳輸。  P.</description>
    </item>
    
    <item>
      <title>[Web] 把電腦的難字造字檔用 FontForge 轉為字型放到網頁上使用</title>
      <link>https://tigernaxojr.github.io/blog/posts/web/web-tool-eudc-frontforge/eudc/</link>
      <pubDate>Tue, 24 Aug 2021 10:07:00 +0800</pubDate>
      
      <guid>https://tigernaxojr.github.io/blog/posts/web/web-tool-eudc-frontforge/eudc/</guid>
      <description>Web 在顯示姓名的時候常會遇到中文難字無法顯示， 此時開發者在本機端如果有安裝造字檔 EUDC.TTE 就可以轉為 woff、woff2、ttf 讓網頁正確顯示難字。 過程需要字型工具軟體 FontForge， 步驟如下：
 拿到造字檔 EUDC.TTE   用 cmd 打開 regedit (win10 搜尋圖示點下後，輸入 cmd，出現小黑窗後再輸入 regedit) 找到機碼 HKEY_CURRENT_USER -&amp;gt; EUDC -&amp;gt; 950 資料夾下的 SystemDefaultEUDCFont 設定檔。 從設定檔的值就是 EUDC 的存放位址取出 EUDC.tte，我這裡是 C:\CIBEN\EUDC.tte  安裝 FontForge，找到 fontforge.exe 的位址 (注意，跟桌面捷徑呼叫的執行檔不一樣！)，我的是在 C:/Program Files (x86)/FontForgeBuilds/bin/fontforge.exe 建立一個轉檔腳本 tte-extract.pe，內容如下 # Open EUDC TTEOpen(&amp;#34;EUDC.tte&amp;#34;, 4)# CHANGE TTFNAME 2 EUDC SetTTFName(0x409,1,&amp;#34;EUDC&amp;#34;)SetTTFName(0x409,2,&amp;#34;EUDC&amp;#34;)SetTTFName(0x409,3,&amp;#34;EUDC&amp;#34;)SetTTFName(0x409,4,&amp;#34;EUDC&amp;#34;)SetTTFName(0x404,1,&amp;#34;EUDC&amp;#34;)SetTTFName(0x404,2,&amp;#34;EUDC&amp;#34;)SetTTFName(0x409,3,&amp;#34;&amp;#34;)SetTTFName(0x404,4,&amp;#34;EUDC&amp;#34;)SetFontNames(&amp;#34;EUDC&amp;#34;, &amp;#34;EUDC&amp;#34;, &amp;#34;EUDC&amp;#34;, &amp;#34;Regular&amp;#34;, &amp;#34;655&amp;#34;, &amp;#34;1.</description>
    </item>
    
    
  </channel>
</rss>
