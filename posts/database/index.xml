<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on YuCheng's Site</title><link>https://blog.tigernaxo.com/posts/database/</link><description>Recent content in Database on YuCheng's Site</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 25 Jul 2022 06:26:00 +0800</lastBuildDate><atom:link href="https://blog.tigernaxo.com/posts/database/index.xml" rel="self" type="application/rss+xml"/><item><title>[SQL] Ranking</title><link>https://blog.tigernaxo.com/posts/database/sql-ranking/</link><pubDate>Fri, 17 Jun 2022 15:42:00 +0800</pubDate><guid>https://blog.tigernaxo.com/posts/database/sql-ranking/</guid><description>&lt;p>先建立一個練習表格：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> Department
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id SERIAL &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name VARCHAR &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> Employee
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id SERIAL &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name VARCHAR &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> salary INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dep_id INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> Employee(name, salary, dep_id) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;Mandy&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">45000&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> Employee(name, salary, dep_id) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;Emily&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">43000&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> Employee(name, salary, dep_id) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;Sylvia&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">26000&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> Employee(name, salary, dep_id) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;Eva&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">48000&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> Employee(name, salary, dep_id) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;Sandra&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">33000&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> Employee(name, salary, dep_id) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;Lily&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">28000&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> Employee(name, salary, dep_id) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;April&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">50000&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> Employee(name, salary, dep_id) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;Cindy&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">43000&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> Employee(name, salary, dep_id) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;Kay&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">40000&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> Department(name) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;IT&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> Department(name) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;RD&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> Department(name) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;QA&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="資料排序">資料排序&lt;/h2>
&lt;p>直接用 ORDER BY 無法得到秩(排名)&lt;/p></description></item><item><title>[SQL] MERGE</title><link>https://blog.tigernaxo.com/posts/database/sql-merge/</link><pubDate>Tue, 14 Jun 2022 00:20:00 +0800</pubDate><guid>https://blog.tigernaxo.com/posts/database/sql-merge/</guid><description>&lt;p>一段神奇的語法，可以指定對舊資料、新的資料分別進行不同的動作(通常是更新、新增)，
不指定的話預設是 BY TARGET，
動作目標都是 TARGET。&lt;/p>
&lt;p>在更新清單的時候特別好用。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>MERGE &lt;span style="color:#66d9ef">INTO&lt;/span> TABLE1 DEST &lt;span style="color:#75715e">-- 目標表格
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">USING&lt;/span>( &lt;span style="color:#66d9ef">SELECT&lt;/span> :K1 K1, :K2 K2, :K3 K3, :K4 K4, &lt;span style="color:#66d9ef">FROM&lt;/span> DUAL) SRC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">ON&lt;/span>( DEST.K1 &lt;span style="color:#f92672">=&lt;/span> SRC.K1 &lt;span style="color:#66d9ef">AND&lt;/span> DEST.K2 &lt;span style="color:#f92672">=&lt;/span> SRC.K2 &lt;span style="color:#66d9ef">AND&lt;/span> DEST.K4 &lt;span style="color:#f92672">=&lt;/span> SRC.K4 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- TARGET 有，SOURCE 沒有，更新 TARGET 裡面的紀錄
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">WHEN&lt;/span> MATCHED &lt;span style="color:#66d9ef">THEN&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">UPDATE&lt;/span> &lt;span style="color:#66d9ef">SET&lt;/span> F1 &lt;span style="color:#f92672">=&lt;/span> SRC.F1, F2 &lt;span style="color:#f92672">=&lt;/span> SRC.F2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- TARGET 沒有，SOURCE 有，SOURCE 新增到 TARGET
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">WHEN&lt;/span> &lt;span style="color:#66d9ef">NOT&lt;/span> MATCHED &lt;span style="color:#66d9ef">THEN&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">INSERT&lt;/span> ( K1, K2, K4, K3, F1, F2 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">VALUES&lt;/span> ( :K1, :K2, :K4, :K3, :F1, :F2)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://stackoverflow.com/questions/43738324/performing-merge-with-dapper-net" target="_blank" rel="noopener">[StackOverflow] Performing MERGE with Dapper.net&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>[SQL] 用 CTE (Common Table Expression) 達成遞迴查詢，建立 MenuTree</title><link>https://blog.tigernaxo.com/posts/database/sql-cte/</link><pubDate>Mon, 25 Apr 2022 06:26:00 +0800</pubDate><guid>https://blog.tigernaxo.com/posts/database/sql-cte/</guid><description>&lt;p>建立一個暫存表 testCTE，並暫存查詢語句(所有資料)的結果
MSSQL CTE 名稱前不需加上 RECURSEIVE 關鍵字，必須使用 UNION ALL
PostgreSQL：CTE 名稱前需加上 RECURSIVE 關鍵字，可用 UNION 或 UNION ALL&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">WITH&lt;/span> CTE (id, name, parentId, lvl) &lt;span style="color:#66d9ef">AS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- 取得第一層的資料(Anchor member)(假設沒有 parentId 的是第一層)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">SELECT&lt;/span> id, name parentId, &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#66d9ef">AS&lt;/span> lvl &lt;span style="color:#66d9ef">FROM&lt;/span> menus &lt;span style="color:#66d9ef">WHERE&lt;/span> parentId &lt;span style="color:#66d9ef">IS&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">UNION&lt;/span> &lt;span style="color:#66d9ef">ALL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- 遞迴取得 Recursive member
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">SELECT&lt;/span> A.id, A.name, A.parentId, B.lvl &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">AS&lt;/span> lvl &lt;span style="color:#66d9ef">FROM&lt;/span> menus A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">INNER&lt;/span> &lt;span style="color:#66d9ef">JOIN&lt;/span> CTE B &lt;span style="color:#66d9ef">on&lt;/span> A.parentIdi &lt;span style="color:#f92672">=&lt;/span> B.d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> CTE &lt;span style="color:#66d9ef">WHERE&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">ORDER&lt;/span> &lt;span style="color:#66d9ef">BY&lt;/span> &lt;span style="color:#66d9ef">LEVEL&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://stackoverflow.com/questions/32681915/how-to-create-a-query-from-a-menu-tree-using-recursive-cte" target="_blank" rel="noopener">[StackOverflow] How to create a query from a menu tree using RECURSIVE CTE?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gss.com.tw/blog/sql-cte-recursive-query-postgresql-mssql" target="_blank" rel="noopener">[SQL] 使用 CTE 遞迴查詢 (PostgreSQL / MSSQL)&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>