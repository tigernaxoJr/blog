<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>[後端] .NET on YuCheng&#39;s Site</title>
    <link>https://tigernaxojr.github.io/blog/posts/dotnet/</link>
    <description>Recent content in [後端] .NET on YuCheng&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Jul 2022 14:57:00 +0800</lastBuildDate><atom:link href="https://tigernaxojr.github.io/blog/posts/dotnet/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>[.NET] 開發階段管理應用程式的敏感資料</title>
      <link>https://tigernaxojr.github.io/blog/posts/dotnet/secret/</link>
      <pubDate>Fri, 29 Jul 2022 14:57:00 +0800</pubDate>
      
      <guid>https://tigernaxojr.github.io/blog/posts/dotnet/secret/</guid>
      <description>基於資訊安全的理由，密碼等敏感性資訊不應該出現在程式碼裡面， 應該把敏感性資料儲存在專案以外的地方，防止對 Git Server 提交專案程式碼的時候把密碼推送到伺服器上， 因此程式開發、部屬階段都應該用適當的策略存放敏感性資料讓程式讀取使用， .NET 儲存敏感性資料大致上來說可以用這兩種方式：
 環境變數 Secret Manager  這裡紀錄要如何在 .NET 開發環境以 Secret 儲存敏感性資料，以及程式讀取的方式。
Secret Manager Secret Manager 就是在本地端特定路徑存放 secret.json 檔案：
%APPDATA%\Microsoft\UserSecrets\&amp;lt;user_secrets_id&amp;gt;\secrets.json ~/.microsoft/usersecrets/&amp;lt;user_secrets_id&amp;gt;/secrets.json 需要先針對個別專案啟用專案的 Secret Storage 支援，切換到專案目錄執行：
dotnet user-secrets init 在專案檔裡的 UserSecretsId 區段會得到一段 GUID，這個要作為 user_secrets_id 資料夾名稱。
&amp;lt;PropertyGroup&amp;gt;  &amp;lt;TargetFramework&amp;gt;netcoreapp3.1&amp;lt;/TargetFramework&amp;gt;  &amp;lt;UserSecretsId&amp;gt;79a3edd0-2092-40a2-a04d-dcb46d5ca9ed&amp;lt;/UserSecretsId&amp;gt; &amp;lt;/PropertyGroup&amp;gt; 以指令設置一組 secret，例如連線字串：
dotnet user-secrets set &amp;#34;ConnectionStrings:POSTGRES&amp;#34; &amp;#34;User ID=root;Password=myPassword;Host=localhost;Port=5432;Database=myDataBase;Pooling=true;Min Pool Size=0;Max Pool Size=100;Connection Lifetime=0;&amp;#34; --project &amp;#34;D:\workspace\MySolution\MyProject&amp;#34; 以檔案直接設置 secret windows
type .\input.json | dotnet user-secrets set Linux/MacOS</description>
    </item>
    
    <item>
      <title>[.NET] .NET 6 Web API 專案</title>
      <link>https://tigernaxojr.github.io/blog/posts/dotnet/startup-webapi/</link>
      <pubDate>Mon, 18 Jul 2022 11:35:00 +0800</pubDate>
      
      <guid>https://tigernaxojr.github.io/blog/posts/dotnet/startup-webapi/</guid>
      <description>添加 Swagger dotnet add web-logger.csproj package Swashbuckle.AspNetCore -v 6.2.3 Program.cs
builder.Services.AddControllers();  builder.Services.AddEndpointsApiExplorer(); builder.Services.AddSwaggerGen(); https://localhost:&amp;lt;port&amp;gt;/swagger/index.html 添加一行 uniFormat 設置，讓專案除錯啟動的時候打開 swagger 讓Swagger 認得 IActionResult 的 api 接收/回傳型別 https://stackoverflow.com/questions/53105513/swagger-not-generating-model-for-object-wrapped-by-iactionresult
&amp;#34;serverReadyAction&amp;#34;: {  &amp;#34;action&amp;#34;: &amp;#34;openExternally&amp;#34;,  &amp;#34;pattern&amp;#34;: &amp;#34;^\\s*Now listening on:\\s+(https?://\\S+)&amp;#34;,  &amp;#34;uriFormat&amp;#34;: &amp;#34;%s/swagger&amp;#34; } ASP.NET Core doesn&amp;rsquo;t include a logging provider for writing logs to files. To write logs to files from an ASP.NET Core app, consider using a third-party logging provider. https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging/?view=aspnetcore-6.0 .NET Standard 2.</description>
    </item>
    
    
  </channel>
</rss>
